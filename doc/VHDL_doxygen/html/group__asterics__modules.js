var group__asterics__modules =
[
    [ "as_2d_conv_filter_external: 2D Convolution (External Kernel)", "group__as__2d__conv__filter__external.html", "group__as__2d__conv__filter__external" ],
    [ "as_2d_conv_filter_internal: 2D Convolution (Preset Kernels)", "group__as__2d__conv__filter__internal.html", "group__as__2d__conv__filter__internal" ],
    [ "as_cordic_direction: Cordic Gradient Direction", "group__as__cordic__direction.html", "group__as__cordic__direction" ],
    [ "as_edge_list: Edge feature vector", "group__as__edge__list.html", "group__as__edge__list" ],
    [ "as_edge_nms: Non-Maximum-Suppression for Edge Data", "group__as__edge__nms.html", "group__as__edge__nms" ],
    [ "as_edge_threshold: Canny-style Thresholding", "group__as__edge__threshold.html", "group__as__edge__threshold" ],
    [ "as_feature_counter: Feature Counter", "group__as__feature__counter.html", "group__as__feature__counter" ],
    [ "as_gradient_direction: Gradient Direction Calculator", "group__as__gradient__direction.html", "group__as__gradient__direction" ],
    [ "as_gradient_weight: Gradient Weight", "group__as__gradient__weight.html", "group__as__gradient__weight" ],
    [ "as_base_registers: 2D Convolution (Preset Kernels)", "group__as__base__registers.html", "group__as__base__registers" ],
    [ "as_canny_pipeline: Canny Edge Detector", "group__as__canny__pipeline.html", null ],
    [ "as_cnn_pooling_filter: Convolution for CNNs", "group__as__cnn__pooling__filter.html", "group__as__cnn__pooling__filter" ],
    [ "as_cnn_serial_convolution_filter: Convolution for CNNs", "group__as__cnn__serial__convolution__filter.html", "group__as__cnn__serial__convolution__filter" ],
    [ "as_cnn_serial_convolution_one_summand_filter: Convolution for CNNs", "group__as__cnn__serial__convolution__one__summand__filter.html", "group__as__cnn__serial__convolution__one__summand__filter" ],
    [ "as_collect: Increase AsStream Data Width", "group__as__collect.html", "group__as__collect" ],
    [ "as_crop: Crop Image Stream", "group__as__crop.html", "group__as__crop" ],
    [ "as_disperse: Reduce AsStream Data Width", "group__as__disperse.html", "group__as__disperse" ],
    [ "as_reorder: Reorder AsStream Data", "group__as__reorder.html", "group__as__reorder" ],
    [ "as_gensync: Generate Synchronization Signals", "group__as__gensync.html", "group__as__gensync" ],
    [ "as_iic: IIC Master", "group__as__iic.html", "group__as__iic" ],
    [ "as_invert: Invert AsStream Data Value", "group__as__invert.html", "group__as__invert" ],
    [ "as_mux: AsStream Multiplexer", "group__as__mux.html", "group__as__mux" ],
    [ "as_picam: Raspberry Pi Camera Adapter", "group__as__picam.html", "group__as__picam" ],
    [ "as_pixel_conv: AsStream Data Expansion", "group__as__pixel__conv.html", "group__as__pixel__conv" ],
    [ "as_pixel_diff: Subtract two AsStreams", "group__as__pixel__diff.html", "group__as__pixel__diff" ],
    [ "as_reader_writer AsStream <-> AXI Interfaces", "group__as__reader__writer.html", "group__as__reader__writer" ],
    [ "as_sensor_ov7670: OmniVision OV7670 Camera Adapter", "group__as__sensor__ov7670.html", "group__as__sensor__ov7670" ],
    [ "as_single_conv_filter: Convolution Filter", "group__as__single__conv__filter.html", "group__as__single__conv__filter" ],
    [ "as_stream_adapter: AsStream Data Width Adapter", "group__as__stream__adapter.html", "group__as__stream__adapter" ],
    [ "as_stream_cutter: AsStream Data Cutter", "group__as__stream__cutter.html", "group__as__stream__cutter" ],
    [ "as_channel_splitter_3: AsStream Channel Splitter", "group__as__channel__splitter__3.html", "group__as__channel__splitter__3" ],
    [ "as_stream_merger_2: AsStream Channel Merger", "group__as__stream__merger__2.html", "group__as__stream__merger__2" ],
    [ "as_stream_merger_3: AsStream Channel Merger", "group__as__stream__merger__3.html", "group__as__stream__merger__3" ],
    [ "as_stream_merger_4: AsStream Channel Merger", "group__as__stream__merger__4.html", "group__as__stream__merger__4" ],
    [ "as_stream_merger_5: AsStream Channel Merger", "group__as__stream__merger__5.html", "group__as__stream__merger__5" ],
    [ "as_stream_merger_7: AsStream Channel Merger", "group__as__stream__merger__7.html", "group__as__stream__merger__7" ],
    [ "as_stream_merger_8: AsStream Channel Merger", "group__as__stream__merger__8.html", "group__as__stream__merger__8" ],
    [ "as_stream_merger_8_dynamic: Dynamic AsStream Channel Merger", "group__as__stream__merger__8__dynamic.html", "group__as__stream__merger__8__dynamic" ],
    [ "as_stream_splitter: AsStream Duplicator", "group__as__stream__splitter.html", "group__as__stream__splitter" ],
    [ "as_stream_strobe_counter: Strobe counter", "group__as__stream__strobe__counter.html", "group__as__stream__strobe__counter" ],
    [ "as_stream_sync: Synchronization of two AsStreams", "group__as__stream__sync.html", "group__as__stream__sync" ],
    [ "as_threshold: Two-Value Thresholding", "group__as__threshold.html", "group__as__threshold" ]
];